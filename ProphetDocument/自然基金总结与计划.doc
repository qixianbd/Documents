1.  2014年度进展总结：
在线程划分算法部分， 改进了原有的线程划分算法， 使之能在多条路径上进行线程划分。
主要对于非循环部分， 尝试在scfg图上寻找多条路径， 在多条路径上进行线程划分， 从而提高划分路径的分支覆盖率。 重点研究比较了Spawn点的合适插入位置， 提出同一scfg图上的多Spawn点之间在执行时必须保证相互独立这一基本前提， 然后在此前提上提出了初步的多遍多路径线程划分方案。 在多遍多路径划分方案中， 第一遍只对最可能路径进行线程划分， 其后的划分遍尝试在之前划分遍的基础上对其它可能路径进行线程划分。 这种方案能够使当程序执行在最可能路径的时候， 新的划分方案能够带来和原有的划分方案相同的加速效果；而当程序没有在最可能路径上执行的时候， 由于对某些非最可能路径的较高概率的路径也进行了划分， 进而允许程序在此路径推测执行， 从而可以带来一定程度的加速比提高。 这方面目前碰到的主要问题在于目前的多遍多路径划分方案达到的分支覆盖率还很低， 有待提高。
   
2. 下一年度计划：
针对非循环部分， 由于目前的线程划分路径所达到的分支覆盖率还比较偏低，从而下阶段的目标主要就是提高划分路径的分支覆盖率， 使分支覆盖率在理论上能趋近一个较高的值， 在实践中能提高程序执行时的加速比。 另外由于Olden测试集里面包含分支的样本不够丰富， 下一步也会尝试寻找其它的测试集来增强非循环部分的测试及优化。针对循环部分会继续改进编译器和模拟器，以支持嵌套循环的动态选择激发。 
